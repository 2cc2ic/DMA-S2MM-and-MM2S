#include "I2C_8bit.h"
#include "xgpio.h"
#include "xil_exception.h"

#define IMAGE_WIDTH     640
#define IMAGE_HEIGHT	480
#define BYTES_PER_PIXEL	4
#define image_length IMAGE_WIDTH*IMAGE_HEIGHT

#define MEM_BASE_ADDR		0x10000000

#define BUFFER0_BASE		(MEM_BASE_ADDR )
#define BUFFER1_BASE		(MEM_BASE_ADDR +     IMAGE_WIDTH * IMAGE_HEIGHT * BYTES_PER_PIXEL)
#define BUFFER2_BASE		(MEM_BASE_ADDR + 2 * IMAGE_WIDTH * IMAGE_HEIGHT * BYTES_PER_PIXEL)


u32 *BufferPtr[3];


static XGpio Gpio;

#define AXI_GPIO_DEV_ID	        XPAR_AXI_GPIO_0_DEVICE_ID

#define XGpio_axi_WriteReg(BaseAddr, RegOffset, Data)	\
		Xil_Out32((BaseAddr) + (u32)(RegOffset), (u32)(Data))

#define XPAR_GPIO_LITE_ML_0 0x40400000



int s2mm_count = 0;
int mm2s_count = 0;


int main(void)
{

	BufferPtr[0] = (u32 *)BUFFER0_BASE;
	BufferPtr[1] = (u32 *)BUFFER1_BASE;
	BufferPtr[2] = (u32 *)BUFFER2_BASE;

	XGpio_Initialize(&Gpio, AXI_GPIO_DEV_ID);
	XGpio_SetDataDirection(&Gpio, 1, 0);

	I2C_config_init();

	XGpio_DiscreteWrite(&Gpio, 1, 1);

	XGpio_axi_WriteReg(XPAR_GPIO_LITE_ML_0,0,BufferPtr[0]);
	XGpio_axi_WriteReg(XPAR_GPIO_LITE_ML_0,4,image_length);

	XGpio_axi_WriteReg(XPAR_GPIO_LITE_ML_0,8,BufferPtr[0]);
	XGpio_axi_WriteReg(XPAR_GPIO_LITE_ML_0,12,image_length);

	while (1) ;

	return 0;
}


